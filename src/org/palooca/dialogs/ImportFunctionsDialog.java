/*
 * PalOOCa.java
 *
 * Palo Open Office Calc AddIn
 * Copyright (C) 2008 PalOOCa Team,  Tensegrity Software GmbH, 2009

 * The software is licensed under an Open-Source License (GPL).
 * If you want to redistribute the software you must observe the regulations of
 * the GPL . If you want to redistribute the software without the
 * restrictions of the GPL, you have to contact Tensegrity Software GmbH
 * (Tensegrity) for written consent to do so.
 * Tensegrity may offer commercial licenses for redistribution (Dual Licensing)
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */

package org.palooca.dialogs;

import com.sun.star.uno.XComponentContext;
import org.palooca.PalOOCaManager;
import org.palooca.dataimport.ImportHandler;
import org.palooca.dataimport.ImportResult;

/**
 *
 * @author Andreas Schneider
 */
public class ImportFunctionsDialog extends javax.swing.JDialog
    implements ImportHandler
{
    
    private final int STATE_ASK = 0;
    private final int STATE_PROCEED = 1;
    private final int STATE_SKIP = 2;
    private final int STATE_PROCESSALL = 3;
    private final int STATE_SKIPALL = 4;
    
    private XComponentContext context;
    private PalOOCaManager manager;
    private int state = STATE_ASK;
    
    /** Creates new form ImportFunctionsDialog */
    public ImportFunctionsDialog(javax.swing.JDialog parent, boolean modal, XComponentContext context) {
        super(parent, modal);
        this.context = context;
        this.manager = PalOOCaManager.getInstance(context);
        
        initComponents();
        setLocationRelativeTo(parent);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancel = new javax.swing.JButton();
        btnSkip = new javax.swing.JButton();
        btnProceed = new javax.swing.JButton();
        btnProcessAll = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtAction = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/palooca/dialogs/PalOOCaDialogs"); // NOI18N
        setTitle(bundle.getString("ImportFunctions")); // NOI18N
        setAlwaysOnTop(true);
        setIconImage(null);

        btnCancel.setText(bundle.getString("Cancel")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSkip.setText(bundle.getString("ImportSkip")); // NOI18N
        btnSkip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkipActionPerformed(evt);
            }
        });

        btnProceed.setText(bundle.getString("ImportProcess")); // NOI18N
        btnProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProceedActionPerformed(evt);
            }
        });

        btnProcessAll.setText(bundle.getString("ImportProcessAll")); // NOI18N
        btnProcessAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessAllActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("ImportCurrentAction")); // NOI18N

        txtAction.setEditable(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtAction, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .add(jLabel1)
                    .add(layout.createSequentialGroup()
                        .add(btnProcessAll)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnProceed)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnSkip)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtAction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(11, 11, 11)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnProcessAll)
                    .add(btnProceed)
                    .add(btnSkip)
                    .add(btnCancel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        state = STATE_SKIPALL;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSkipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkipActionPerformed
        state = STATE_SKIP;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnSkipActionPerformed

    private void btnProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProceedActionPerformed
        state = STATE_PROCEED;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnProceedActionPerformed

    private void btnProcessAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessAllActionPerformed
        state = STATE_PROCESSALL;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnProcessAllActionPerformed

    public void resetState(){
        state = STATE_ASK;
        txtAction.setText("");
    }

    public void setStateProcessAll(){
        state = STATE_PROCESSALL;
    }

    public boolean processImportResult(ImportResult result) {
        if (state == STATE_ASK) {
            txtAction.setText(result.toString());
            if (this.isModal())
                this.setVisible(true);
            else
                manager.showModal(this);
        }

        switch (state) {
            case STATE_PROCESSALL:
                return true;
            case STATE_SKIPALL:
                return false;
            case STATE_PROCEED:
                state = STATE_ASK;
                return true;
            case STATE_SKIP:
                state = STATE_ASK;
                return false;
        }
        
        return false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnProceed;
    private javax.swing.JButton btnProcessAll;
    private javax.swing.JButton btnSkip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtAction;
    // End of variables declaration//GEN-END:variables
    
}

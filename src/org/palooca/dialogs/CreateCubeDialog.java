/*
 * CreateCubeDialog.java
 *
 * Palo Open Office Calc AddIn
 * Copyright (C) 2008 PalOOCa Team,  Tensegrity Software GmbH, 2009

 * The software is licensed under an Open-Source License (GPL).
 * If you want to redistribute the software you must observe the regulations of
 * the GPL . If you want to redistribute the software without the
 * restrictions of the GPL, you have to contact Tensegrity Software GmbH
 * (Tensegrity) for written consent to do so.
 * Tensegrity may offer commercial licenses for redistribution (Dual Licensing)
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

 * Created on 29.06.2009, 21:06:33
 */

package org.palooca.dialogs;

import com.sun.star.uno.XComponentContext;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import com.jedox.palojlib.interfaces.IDatabase;
import com.jedox.palojlib.interfaces.IDimension;

/**
 *
 * @author MichaelRaue
 */
public class CreateCubeDialog extends javax.swing.JDialog {

    private int modalResult = JOptionPane.CANCEL_OPTION;
    private DefaultListModel dimensionModel = new DefaultListModel();
    private DefaultListModel dimensionCubeModel = new DefaultListModel();
    private String cubeName;
    private IDatabase database;

    /** Creates new form CreateCubeDialog */
    public CreateCubeDialog(java.awt.Dialog parent, boolean modal, XComponentContext context, IDatabase database) {
        super(parent, modal);
        initComponents();

        this.database = database;

        listDimensions.setCellRenderer(new DimensionListCellRenderer());
        listCubeDimensions.setCellRenderer(new DimensionListCellRenderer());

        IDimension dims[] = database.getDimensions();
        for (int i = 0; i < dims.length; i++) {
            if (dims[i].getType() == IDimension.DimensionType.DIMENSION_NORMAL)
                dimensionModel.addElement(dims[i]);
        }

        updateMoveButtons();
        setLocationRelativeTo(null);
    }

    public int getModalResult() {
        return modalResult;
    }

    public DefaultListModel getCubeDimensionModel()
    {
        return dimensionCubeModel;
    }

    public String getCubeName() {
        return cubeName;
    }

    protected void updateMoveButtons() {
        int selDimRows[] = listDimensions.getSelectedIndices();
        int selCubeRows[] = listCubeDimensions.getSelectedIndices();

        if (selDimRows == null || selDimRows.length == 0) {
            jButtonMoveRight.setEnabled(false);
        } else {
            jButtonMoveRight.setEnabled(true);
        }

        if (selCubeRows.length == 0) {
            jButtonMoveDown.setEnabled(false);
            jButtonMoveLeft.setEnabled(false);
            jButtonMoveUp.setEnabled(false);
        } else {
            if (selCubeRows[0] == 0) {
                jButtonMoveUp.setEnabled(false);
            } else {
                jButtonMoveUp.setEnabled(true);
            }
            if (selCubeRows[selCubeRows.length - 1] == dimensionCubeModel.getSize() - 1) {
                jButtonMoveDown.setEnabled(false);
            } else {
                jButtonMoveDown.setEnabled(true);
            }

            jButtonMoveLeft.setEnabled(true);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCubeName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDimensions = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jButtonMoveRight = new javax.swing.JButton();
        jButtonMoveLeft = new javax.swing.JButton();
        jButtonMoveUp = new javax.swing.JButton();
        jButtonMoveDown = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listCubeDimensions = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/palooca/dialogs/PalOOCaDialogs"); // NOI18N
        setTitle(bundle.getString("CreateCubeCaption")); // NOI18N
        setResizable(false);

        jLabel1.setText(bundle.getString("Name")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtCubeName.setText(cubeName);
        txtCubeName.setName("txtCubeName"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listDimensions.setModel(dimensionModel);
        listDimensions.setName("listDimensions"); // NOI18N
        listDimensions.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDimensionsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listDimensions);

        jLabel2.setText(bundle.getString("Dimensions")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jButtonMoveRight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MoveNext.png"))); // NOI18N
        jButtonMoveRight.setName("jButtonMoveRight"); // NOI18N
        jButtonMoveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoveRightActionPerformed(evt);
            }
        });

        jButtonMoveLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MovePrevious.png"))); // NOI18N
        jButtonMoveLeft.setName("jButtonMoveLeft"); // NOI18N
        jButtonMoveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoveLeftActionPerformed(evt);
            }
        });

        jButtonMoveUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MoveUp.png"))); // NOI18N
        jButtonMoveUp.setName("jButtonMoveUp"); // NOI18N
        jButtonMoveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoveUpActionPerformed(evt);
            }
        });

        jButtonMoveDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MoveDown.PNG"))); // NOI18N
        jButtonMoveDown.setName("jButtonMoveDown"); // NOI18N
        jButtonMoveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoveDownActionPerformed(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        listCubeDimensions.setModel(dimensionCubeModel);
        listCubeDimensions.setName("listCubeDimensions"); // NOI18N
        listCubeDimensions.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listCubeDimensionsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listCubeDimensions);

        jLabel3.setText(bundle.getString("CubeDimension")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        btnOK.setText(bundle.getString("OK")); // NOI18N
        btnOK.setName("btnOK"); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText(bundle.getString("Cancel")); // NOI18N
        btnCancel.setToolTipText(bundle.getString("Cancel")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(18, 18, 18)
                        .add(txtCubeName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButtonMoveRight, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonMoveLeft, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonMoveUp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonMoveDown, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(txtCubeName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel2)
                                    .add(jLabel3))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)))
                            .add(layout.createSequentialGroup()
                                .add(80, 80, 80)
                                .add(jButtonMoveRight)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonMoveLeft)
                                .add(18, 18, 18)
                                .add(jButtonMoveUp)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonMoveDown))))
                    .add(layout.createSequentialGroup()
                        .add(btnOK)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMoveRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoveRightActionPerformed
        int[] selDims = listDimensions.getSelectedIndices();

        for (int i = 0; i < selDims.length; i++) {
            IDimension dim = (IDimension)dimensionModel.getElementAt(selDims[i]);
            dimensionCubeModel.addElement(dim);
        }

        for (int i = selDims.length - 1; i >= 0; i--) {
            dimensionModel.removeElementAt(selDims[i]);
        }

        updateMoveButtons();
}//GEN-LAST:event_jButtonMoveRightActionPerformed

    private void jButtonMoveLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoveLeftActionPerformed
        int[] selDims = listCubeDimensions.getSelectedIndices();

        for (int i = 0; i < selDims.length; i++) {
            IDimension dim = (IDimension)dimensionCubeModel.getElementAt(selDims[i]);
            dimensionModel.addElement(dim);
        }

        for (int i = selDims.length - 1; i >= 0; i--) {
            dimensionCubeModel.removeElementAt(selDims[i]);
        }

        updateMoveButtons();
}//GEN-LAST:event_jButtonMoveLeftActionPerformed

    private void jButtonMoveUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoveUpActionPerformed
        int selRows[] = listCubeDimensions.getSelectedIndices();
        Object obj;

        for (int i = 0; i < selRows.length; i++) {
            if (selRows[i] > 0) {
                obj = dimensionCubeModel.get(selRows[i]);
                dimensionCubeModel.remove(selRows[i]);
                dimensionCubeModel.insertElementAt(obj, selRows[i] - 1);
                listCubeDimensions.addSelectionInterval(selRows[i] - 1, selRows[i] - 1);
            }
        }

        updateMoveButtons();
}//GEN-LAST:event_jButtonMoveUpActionPerformed

    private void jButtonMoveDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoveDownActionPerformed
        int selRows[] = listCubeDimensions.getSelectedIndices();
        Object obj;

        for (int i = selRows.length - 1; i >= 0; i--) {
            obj = dimensionCubeModel.get(selRows[i]);
            dimensionCubeModel.remove(selRows[i]);
            dimensionCubeModel.insertElementAt(obj, selRows[i] + 1);
            listCubeDimensions.addSelectionInterval(selRows[i] + 1, selRows[i] + 1);
        }

        updateMoveButtons();
}//GEN-LAST:event_jButtonMoveDownActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        modalResult = JOptionPane.CANCEL_OPTION;
        setVisible(false);
        dispose();
}//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        cubeName = txtCubeName.getText();
        if (cubeName.length() == 0) {
            JOptionPane.showMessageDialog(this, "Invalid Cube Name!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (dimensionCubeModel.getSize() < 2) {
            JOptionPane.showMessageDialog(this, "Not enough dimensions for Cube!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (database.getDimensionByName(cubeName) != null) {
            JOptionPane.showMessageDialog(this, "Cube Name already used!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        modalResult = JOptionPane.OK_OPTION;
        setVisible(false);

    }//GEN-LAST:event_btnOKActionPerformed

    private void listDimensionsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDimensionsValueChanged
        updateMoveButtons();
    }//GEN-LAST:event_listDimensionsValueChanged

    private void listCubeDimensionsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listCubeDimensionsValueChanged
        updateMoveButtons();
    }//GEN-LAST:event_listCubeDimensionsValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton jButtonMoveDown;
    private javax.swing.JButton jButtonMoveLeft;
    private javax.swing.JButton jButtonMoveRight;
    private javax.swing.JButton jButtonMoveUp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listCubeDimensions;
    private javax.swing.JList listDimensions;
    private javax.swing.JTextField txtCubeName;
    // End of variables declaration//GEN-END:variables

}
